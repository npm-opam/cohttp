# OASIS_START
# DO NOT EDIT (digest: 00a463c248038f4b954c41050251d63d)
version = "0.21.0"
description = "HTTP library for Lwt, Async, JavaScript and Mirage"
requires =
"re.emacs stringext uri uri.services fieldslib sexplib bytes base64"
archive(byte) = "cohttp.cma"
archive(byte, plugin) = "cohttp.cma"
archive(native) = "cohttp.cmxa"
archive(native, plugin) = "cohttp.cmxs"
exists_if = "cohttp.cma"
package "top" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "cohttp"
 archive(byte) = "cohttp_top.cma"
 archive(byte, plugin) = "cohttp_top.cma"
 archive(native) = "cohttp_top.cmxa"
 archive(native, plugin) = "cohttp_top.cmxs"
 exists_if = "cohttp_top.cma"
)

package "test" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "cohttp oUnit"
 archive(byte) = "cohttp_test.cma"
 archive(byte, plugin) = "cohttp_test.cma"
 archive(native) = "cohttp_test.cmxa"
 archive(native, plugin) = "cohttp_test.cmxs"
 exists_if = "cohttp_test.cma"
)

package "lwt-unix-test" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "cohttp.test cohttp.lwt unix lwt.unix oUnit"
 archive(byte) = "cohttp_lwt_unix_test.cma"
 archive(byte, plugin) = "cohttp_lwt_unix_test.cma"
 archive(native) = "cohttp_lwt_unix_test.cmxa"
 archive(native, plugin) = "cohttp_lwt_unix_test.cmxs"
 exists_if = "cohttp_lwt_unix_test.cma"
)

package "lwt-core" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "lwt uri cohttp"
 archive(byte) = "cohttp_lwt.cma"
 archive(byte, plugin) = "cohttp_lwt.cma"
 archive(native) = "cohttp_lwt.cmxa"
 archive(native, plugin) = "cohttp_lwt.cmxs"
 exists_if = "cohttp_lwt.cma"
)

package "lwt" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "cohttp.lwt-core unix lwt.unix conduit.lwt-unix magic-mime"
 archive(byte) = "cohttp_lwt_unix.cma"
 archive(byte, plugin) = "cohttp_lwt_unix.cma"
 archive(native) = "cohttp_lwt_unix.cmxa"
 archive(native, plugin) = "cohttp_lwt_unix.cmxs"
 exists_if = "cohttp_lwt_unix.cma"
)

package "js" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "cohttp.lwt-core js_of_ocaml"
 archive(byte) = "cohttp_lwt_xhr.cma"
 archive(byte, plugin) = "cohttp_lwt_xhr.cma"
 archive(native) = "cohttp_lwt_xhr.cmxa"
 archive(native, plugin) = "cohttp_lwt_xhr.cmxs"
 exists_if = "cohttp_lwt_xhr.cma"
)

package "async-test" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "cohttp.test cohttp.async oUnit"
 archive(byte) = "cohttp_async_test.cma"
 archive(byte, plugin) = "cohttp_async_test.cma"
 archive(native) = "cohttp_async_test.cmxa"
 archive(native, plugin) = "cohttp_async_test.cmxs"
 exists_if = "cohttp_async_test.cma"
)

package "async" (
 version = "0.21.0"
 description = "HTTP library for Lwt, Async, JavaScript and Mirage"
 requires = "uri uri.services cohttp threads async conduit.async magic-mime"
 archive(byte) = "cohttp_async.cma"
 archive(byte, plugin) = "cohttp_async.cma"
 archive(native) = "cohttp_async.cmxa"
 archive(native, plugin) = "cohttp_async.cmxs"
 exists_if = "cohttp_async.cma"
)
# OASIS_STOP

